<UserControl
    x:Class="NINA.View.CameraControlView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:NINA.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ninactrl="clr-namespace:NINACustomControlLibrary;assembly=NINACustomControlLibrary"
    xmlns:ns="clr-namespace:NINA.Locale"
    xmlns:rules="clr-namespace:NINA.Utility.ValidationRules"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <StackPanel x:Name="LayoutRoot" Orientation="{Binding MyOrientation}">
        <!--<Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>-->

        <StackPanel IsEnabled="{Binding MyCommand.Execution.IsNotCompleted, Converter={StaticResource InverseBooleanConverter}}" Orientation="{Binding MyOrientation}">
            <Border
                MinHeight="30"
                BorderBrush="{StaticResource BorderBrush}"
                BorderThickness="0,0,0,1">
                <UniformGrid VerticalAlignment="Center" Columns="2">
                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblExposureTime}" />
                    <TextBox MinWidth="50" Margin="5">
                        <TextBox.Text>
                            <Binding Mode="TwoWay" Path="MyExposureDuration">
                                <Binding.ValidationRules>
                                    <rules:GreaterZeroRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </UniformGrid>
            </Border>
            <Border
                MinHeight="30"
                BorderBrush="{StaticResource BorderBrush}"
                BorderThickness="0,0,0,1">
                <UniformGrid VerticalAlignment="Center" Columns="2">
                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblFilter}" />
                    <ComboBox
                        Height="25"
                        Margin="5,0,0,0"
                        DisplayMemberPath="Name"
                        ItemsSource="{Binding MyFilters}"
                        SelectedItem="{Binding MySelectedFilter}"
                        SelectedValuePath="Name" />
                </UniformGrid>
            </Border>
            <Border
                MinHeight="30"
                BorderBrush="{StaticResource BorderBrush}"
                BorderThickness="0,0,0,1">
                <UniformGrid VerticalAlignment="Center" Columns="2">
                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblBinning}" />
                    <ComboBox
                        Height="25"
                        Margin="5,0,0,0"
                        DisplayMemberPath="Name"
                        ItemsSource="{Binding MyBinningModes}"
                        SelectedItem="{Binding MySelectedBinningMode}"
                        SelectedValuePath="Name" />
                </UniformGrid>
            </Border>
        </StackPanel>

        <StackPanel
            Margin="5,0,0,0"
            HorizontalAlignment="Right"
            Orientation="Horizontal"
            Visibility="{Binding MyCommand, Converter={StaticResource NullToVisibilityCollapsedConverter}}">

            <ToggleButton
                Width="45"
                Height="45"
                IsChecked="{Binding MyLoop}">
                <ToggleButton.ToolTip>
                    <ToolTip ToolTipService.ShowOnDisabled="True">
                        <TextBlock Text="{ns:Loc LblTooltipLoop}" />
                    </ToolTip>
                </ToggleButton.ToolTip>
                <ToggleButton.Style>
                    <Style BasedOn="{StaticResource TB}" TargetType="ToggleButton">
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Path
                                            Margin="5"
                                            Data="{StaticResource LoopSVG}"
                                            Fill="{StaticResource ButtonForegroundBrush}"
                                            Stretch="Uniform" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Path
                                            Margin="5"
                                            Data="{StaticResource LoopSVG}"
                                            Fill="{StaticResource ButtonForegroundDisabledBrush}"
                                            Stretch="Uniform" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>

            </ToggleButton>

            <ninactrl:CancellableButton
                Width="45"
                Height="45"
                Margin="5,0,5,0"
                HorizontalAlignment="Left"
                ButtonImage="{Binding MyButtonImage}"
                CancelButtonImage="{Binding MyCancelButtonImage}"
                CancelCommand="{Binding MyCancelCommand}"
                Command="{Binding MyCommand}"
                ToolTip="{ns:Loc LblTooltipTakeExposure}" />
        </StackPanel>
    </StackPanel>
</UserControl>
