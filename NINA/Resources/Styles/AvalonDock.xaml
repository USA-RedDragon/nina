<!--
    Copyright © 2016 - 2018 Stefan Berg <isbeorn86+NINA@googlemail.com>

    This file is part of N.I.N.A. - Nighttime Imaging 'N' Astronomy.

    N.I.N.A. is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    N.I.N.A. is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with N.I.N.A..  If not, see http://www.gnu.org/licenses/.-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dock="http://schemas.xceed.com/wpf/xaml/avalondock">

    <dock:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter" />

    <DataTemplate x:Key="DocumentHeaderTemplate">
        <TextBlock
            Name="PART_TextBlock"
            Margin="10,0,10,0"
            Foreground="{StaticResource PrimaryBrush}"
            Text="{Binding Title}" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}, Path=IsSelected}" Value="True">
                <Setter TargetName="PART_TextBlock" Property="Foreground" Value="{StaticResource ButtonForegroundBrush}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="AnchorHeaderTemplate">
        <TextBlock
            Name="PART_TextBlock"
            Margin="10,0,10,0"
            Foreground="{StaticResource PrimaryBrush}"
            Text="{Binding Title}" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}, Path=IsSelected}" Value="True">
                <Setter TargetName="PART_TextBlock" Property="Foreground" Value="{StaticResource ButtonForegroundBrush}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style TargetType="{x:Type dock:LayoutDocumentTabItem}">
        <Setter Property="Margin" Value="-6,-10,-6,-10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dock:LayoutDocumentTabItem}">
                    <dock:DropDownControlArea DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}" DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">

                        <Border
                            Name="Panel"
                            Background="{StaticResource BackgroundBrush}"
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="1">
                            <Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.ColumnSpan="2" Background="Transparent" />
                                    <ContentPresenter
                                        VerticalAlignment="Center"
                                        Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                        ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type dock:DockingManager}, Mode=FindAncestor}}"
                                        ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type dock:DockingManager}, Mode=FindAncestor}}" />
                                    <!--  Close button should be moved out to the container style  -->
                                    <Button
                                        x:Name="DocumentCloseButton"
                                        Grid.Column="1"
                                        Margin="5,0,0,0"
                                        Command="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                        ToolTip="Close"
                                        Visibility="Hidden">
                                        <Path
                                            Width="10"
                                            Height="10"
                                            Margin="2"
                                            Data="{StaticResource CancelSVG}"
                                            Fill="{StaticResource PrimaryBrush}"
                                            Stretch="Uniform" />
                                        <!--<Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinClose.png" />-->
                                    </Button>
                                </Grid>
                            </Grid>
                        </Border>
                    </dock:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Panel" Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
                            <Setter Property="Margin" Value="-6,-12,-6,-11" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=CanClose}" Value="false">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <Trigger SourceName="Panel" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Panel" Property="Background" Value="{StaticResource ButtonBackgroundSelectedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type dock:LayoutAnchorableTabItem}">
        <Setter Property="Margin" Value="-6,-10,-6,-10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dock:LayoutAnchorableTabItem}">
                    <dock:DropDownControlArea DropDownContextMenu="{Binding Root.Manager.AnchorableContextMenu}" DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                        <Border
                            Name="Panel"
                            Background="{StaticResource BackgroundBrush}"
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="1,0,1,1">
                            <Grid>
                                <Grid>
                                    <ContentPresenter
                                        VerticalAlignment="Center"
                                        Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                        ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type dock:DockingManager}, Mode=FindAncestor}}"
                                        ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type dock:DockingManager}, Mode=FindAncestor}}" />
                                    <dock:DropDownControlArea
                                        Grid.Column="0"
                                        DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                        DropDownContextMenuDataContext="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Grid>
                            </Grid>
                        </Border>
                    </dock:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                            <Setter Property="Margin" Value="-6,-12,-6,-11" />
                            <Setter TargetName="Panel" Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
                        </DataTrigger>
                        <Trigger SourceName="Panel" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Panel" Property="Background" Value="{StaticResource ButtonBackgroundSelectedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="AnchorTemplate" TargetType="{x:Type dock:LayoutAnchorControl}">
        <Border
            Margin="2"
            Padding="2"
            Background="{StaticResource ButtonBackgroundBrush}"
            BorderBrush="{StaticResource BorderBrush}"
            BorderThickness="1">
            <ContentPresenter
                Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type dock:DockingManager}, Mode=FindAncestor}}"
                ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type dock:DockingManager}, Mode=FindAncestor}}" />
        </Border>
    </ControlTemplate>

    <Style x:Key="DocumentPaneControlStyle" TargetType="{x:Type dock:LayoutDocumentPaneControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dock:LayoutDocumentPaneControl}">
                    <Grid
                        ClipToBounds="False"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border Grid.RowSpan="2" Background="Transparent" />
                        <Grid Panel.ZIndex="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <dock:DocumentPaneTabPanel
                                x:Name="HeaderPanel"
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="2,2,2,0"
                                IsItemsHost="true"
                                KeyboardNavigation.TabIndex="1" />
                            <dock:DropDownButton
                                x:Name="MenuDropDownButton"
                                Grid.Column="1"
                                Focusable="False"
                                Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
                                <dock:DropDownButton.DropDownContextMenu>
                                    <dock:ContextMenuEx ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                                        <dock:ContextMenuEx.ItemContainerStyle>
                                            <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type dock:MenuItemEx}">
                                                <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}" />
                                                <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" />
                                                <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}" />
                                                <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}" />
                                                <Setter Property="Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}" />
                                            </Style>
                                        </dock:ContextMenuEx.ItemContainerStyle>
                                    </dock:ContextMenuEx>
                                </dock:DropDownButton.DropDownContextMenu>
                                <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinDocMenu.png" />
                            </dock:DropDownButton>
                        </Grid>
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{StaticResource BackgroundBrush}"
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
                            <Setter TargetName="MenuDropDownButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource VisibilityConverter}}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dock:LayoutDocumentTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dock:LayoutDocumentControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AnchorablePaneControlStyle" TargetType="{x:Type dock:LayoutAnchorablePaneControl}">
        <Setter Property="TabStripPlacement" Value="Bottom" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dock:LayoutAnchorablePaneControl}">
                    <Grid
                        ClipToBounds="True"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border Grid.RowSpan="2" Background="Transparent" />
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Background="{StaticResource BackgroundBrush}"
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="0,0,0,1"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <dock:AnchorablePaneTabPanel
                            x:Name="HeaderPanel"
                            Grid.Row="1"
                            Margin="6,10,6,10"
                            Panel.ZIndex="1"
                            IsItemsHost="true"
                            KeyboardNavigation.TabIndex="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dock:LayoutAnchorableTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dock:LayoutAnchorableControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type dock:LayoutAutoHideWindowControl}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
    </Style>

    <Style TargetType="{x:Type dock:DockingManager}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="DocumentPaneControlStyle" Value="{StaticResource DocumentPaneControlStyle}" />
        <Setter Property="AnchorablePaneControlStyle" Value="{StaticResource AnchorablePaneControlStyle}" />
        <Setter Property="AnchorTemplate" Value="{StaticResource AnchorTemplate}" />
        <Setter Property="DocumentHeaderTemplate" Value="{StaticResource DocumentHeaderTemplate}" />
        <Setter Property="AnchorableHeaderTemplate" Value="{StaticResource AnchorHeaderTemplate}" />
    </Style>

    <Style TargetType="{x:Type dock:LayoutAnchorGroupControl}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
    </Style>

    <Style TargetType="dock:AnchorablePaneTitle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <dock:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}" DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">

                                <ContentPresenter
                                    Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dock:DropDownControlArea>
                            <Border
                                Grid.ColumnSpan="10"
                                BorderBrush="{StaticResource BorderBrush}"
                                BorderThickness="0,0,0,1" />

                            <!--<avalonDockControls:DropDownButton x:Name="PART_ContextMenu"
                                Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                Focusable="False"
                                Grid.Column="1"
                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}">
                                <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinMenu.png" />
                            </avalonDockControls:DropDownButton>-->

                            <!--<Button x:Name="PART_AutoHidePin"
                                Grid.Column="2"
                                Focusable="False"
                                Background="{StaticResource BackgroundBrush}"
                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                                Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                ToolTip="">
                                <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinAutoHide.png" />
                            </Button>-->

                            <Button
                                x:Name="PART_HidePin"
                                Margin="1"
                                Grid.Column="1"
                                Background="{StaticResource BackgroundBrush}"
                                BorderThickness="0"
                                Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                ToolTip="Hide"
                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                                <Path
                                    Width="10"
                                    Height="10"
                                    Margin="2"
                                    Data="{StaticResource CancelSVG}"
                                    Fill="{StaticResource PrimaryBrush}"
                                    Stretch="Uniform" />
                                <!--<Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinClose.png" />-->
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="LayoutTransform" TargetName="PART_AutoHidePin">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>-->
                        <!--<DataTrigger Binding="{Binding Path=CanClose}" Value="false">
                            <Setter Property="IsEnabled" Value="False" TargetName="PART_HidePin" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ContextMenu" />
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>