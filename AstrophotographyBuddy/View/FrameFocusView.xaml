<UserControl x:Class="AstrophotographyBuddy.View.FrameFocusView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AstrophotographyBuddy.View"
             xmlns:util="clr-namespace:AstrophotographyBuddy.Utility"
              xmlns:chartingToolkit=	"clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"             
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
            
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="50" />
            </Grid.ColumnDefinitions>
            <TextBlock Text="Zoom" VerticalAlignment="Center" />
            <Slider Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Value="{Binding Zoom}" TickPlacement="BottomRight" TickFrequency="0.1" IsSnapToTickEnabled="True"  Maximum="10" Minimum="0.1" SmallChange="0.1"></Slider>
            <TextBlock Grid.Column="2" Text="{Binding Zoom}" VerticalAlignment="Center"></TextBlock>
        </Grid>
        <Expander Grid.Row="2" IsExpanded="True" Header="Histogram">
            <chartingToolkit:Chart DataContext="{Binding ImagingVM}" Grid.Row="2"  Title="" Margin="0,0,1,0" Style="{StaticResource ChartStyle}">
                <chartingToolkit:Chart.Axes>
                    <chartingToolkit:LinearAxis Visibility="Hidden"
                            Orientation="X"                            
                            Minimum="0"
                            Maximum="65535" FontSize="6"/>
                </chartingToolkit:Chart.Axes>
                <chartingToolkit:LineSeries  DependentValuePath="Value" 
				    IndependentValuePath="Key" ItemsSource="{Binding SourceArray.Histogram}" 
				    IsSelectionEnabled="True" Style="{StaticResource LineSeriesStyle}">
                    <chartingToolkit:LineSeries.DataPointStyle>
                        <Style TargetType="chartingToolkit:LineDataPoint">
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </chartingToolkit:LineSeries.DataPointStyle>
                </chartingToolkit:LineSeries>

            </chartingToolkit:Chart>
        </Expander>
        <Border Grid.Row="1" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1">
            <ScrollViewer  PanningMode="Both">
                <ScrollViewer.Style>
                    <Style TargetType="{x:Type ScrollViewer}">
                        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                    
                        <!--<Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=chkActualSize}" Value="True">
                                <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
                                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                            </DataTrigger>
                        </Style.Triggers>-->
                    </Style>
                </ScrollViewer.Style>
                <Image Grid.Column="0" Grid.Row="0" Source="{Binding ImagingVM.Image}" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Image.LayoutTransform>
                        <ScaleTransform ScaleX="{Binding Zoom}" ScaleY="{Binding Zoom}" />
                    </Image.LayoutTransform>
                </Image>
            </ScrollViewer>
        </Border>
        <Grid Grid.Column="0" Grid.Row="3" IsEnabled="{Binding ImagingVM.Cam.Connected}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />                               
                <ColumnDefinition Width="180" />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <TextBlock VerticalAlignment="Center">Snap Exposure Time in seconds:</TextBlock>
                <TextBox Margin="5" MinWidth="50" Height="30" Text="{Binding SnapExposureDuration}" IsEnabled="{Binding SnapCommand.Execution.IsNotCompleted, Converter={StaticResource InverseBooleanConverter}}"></TextBox>
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center">Filter:</TextBlock>
                    <ComboBox VerticalAlignment="Center" HorizontalAlignment="Center" Height="30" ItemsSource="{Binding Source={StaticResource AppVM}, Path=CameraVM.FilterWheelVM.FW.Filters}" DisplayMemberPath="Name" SelectedItem="{Binding SnapFilter, Mode=TwoWay}" SelectedValuePath="Name"></ComboBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center">Binning:</TextBlock>
                    <ComboBox VerticalAlignment="Center" HorizontalAlignment="Center" Height="30" ItemsSource="{Binding Source={StaticResource AppVM}, Path=CameraVM.Cam.BinningModes}" DisplayMemberPath="Name" SelectedItem="{Binding SnapBin}" SelectedValuePath="Name"></ComboBox>
                </StackPanel>
            </StackPanel>
            <Grid Visibility="{Binding SnapCommand.Execution, Converter={StaticResource NullToVisibilityConverter}}">
                <Button Command="{Binding CancelSnapCommand}" Visibility="{Binding SnapCommand.Execution.IsNotCompleted, Converter={StaticResource VisibilityConverter}}">
                    <Path Fill="{StaticResource ButtonForegroundBrush}" Data="{StaticResource CancelSVG}" Stretch="Uniform" Margin="5">
                    </Path>
                </Button>
            </Grid>

            <UniformGrid Columns="3" Grid.Column="1">
                
                <ToggleButton IsChecked="{Binding Loop}"  Margin="5,0,5,0">
                    <!--<Grid>
                        <Path Fill="{StaticResource ButtonForegroundBrush}" Data="{StaticResource LoopSVG}" Stretch="Uniform" Margin="5">
                        </Path>
                        
                        
                        <Image Margin="5" Source="/AstrophotographyBuddy;component/Resources/loop_active.png" Visibility="{Binding Loop, Converter={StaticResource VisibilityConverter}}" ></Image>
                        <Image Margin="5" Source="/AstrophotographyBuddy;component/Resources/loop_inactive.png" Visibility="{Binding Loop, Converter={StaticResource InverseBoolToVisibilityConverter}}"></Image>
                    </Grid>-->
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource TB}" >
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path Fill="{StaticResource ButtonForegroundBrush}" Data="{StaticResource LoopSVG}" Stretch="Uniform" Margin="5">
                                            </Path>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path Fill="{StaticResource ButtonForegroundDisabledBrush}" Data="{StaticResource LoopSVG}" Stretch="Uniform" Margin="5">
                                            </Path>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>

                </ToggleButton>
                <ToggleButton IsChecked="{Binding ImagingVM.AutoStretch}"  Margin="5,0,5,0">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource TB}" >
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path Fill="{StaticResource ButtonForegroundBrush}" Data="{StaticResource WandSVG}" Stretch="Uniform" Margin="5">
                                            </Path>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path Fill="{StaticResource ButtonForegroundDisabledBrush}" Data="{StaticResource WandSVG}" Stretch="Uniform" Margin="5">
                                            </Path>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <Button Width="50" Height="50"  Command="{Binding SnapCommand}" HorizontalAlignment="Left" IsEnabled="{Binding ImagingVM.IsExposing, Converter={StaticResource InverseBooleanConverter}}"  Margin="5,0,5,0">
                    <Grid>
                        <Path Fill="{StaticResource ButtonForegroundBrush}" Data="{StaticResource PictureSVG}" Stretch="Uniform" Margin="5" Visibility="{Binding SnapCommand.Execution.IsNotCompleted, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                        </Path>
                        <Grid Visibility="{Binding SnapCommand.Execution, Converter={StaticResource NullToVisibilityConverter}}" >
                            <local:LoadingAnimation HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding SnapCommand.Execution.IsNotCompleted, Converter={StaticResource VisibilityConverter}}" Text="{Binding ImagingVM.ExposureSeconds}" />
                        </Grid>
                    </Grid>
                </Button>
            </UniformGrid>
        </Grid>
        <Expander ExpandDirection="Right"  Grid.Column="1" Grid.Row="0" Grid.RowSpan="4" IsExpanded="True">
            <Expander.Header>
                <TextBlock Text="Image Manipulation" TextOptions.TextFormattingMode="Display"
TextOptions.TextRenderingMode="ClearType"
UseLayoutRounding="true">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="-90"/>
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Expander.Header>
            <Grid  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>

                <Path Fill="{StaticResource ButtonForegroundBrush}" Data="{StaticResource BrightnessSVG}" Stretch="Uniform" Margin="5">
                </Path>
                <Slider Grid.Row="1" Orientation="Vertical" Width="25" Value="{Binding Brightness}" MinWidth="50"   Maximum="2" Minimum="0" SmallChange="0.1"></Slider>
                <TextBlock HorizontalAlignment="Center" Grid.Row="2" Text="{Binding Brightness}"></TextBlock>

                <Path Grid.Column="1" Fill="{StaticResource ButtonForegroundBrush}" Data="{StaticResource ContrastSVG}" Stretch="Uniform" Margin="5">
                </Path>

                <Slider  Grid.Row="1" Grid.Column="1" Orientation="Vertical" Width="25" Value="{Binding Contrast}" MinWidth="50" Maximum="10" Minimum="0" SmallChange="0.1"></Slider>
                <TextBlock HorizontalAlignment="Center" Grid.Row="2" Grid.Column="1" Text="{Binding Contrast}"></TextBlock>

                <Path Fill="{StaticResource ButtonForegroundBrush}" Grid.Column="2" Data="{StaticResource GammaSVG}" Stretch="Uniform" Margin="5">
                </Path>
                <Slider HorizontalAlignment="Center" Grid.Row="1" Grid.Column="2" Orientation="Vertical" Width="25" MinWidth="50" Value="{Binding Gamma}" Maximum="5" Minimum="0.2" SmallChange="0.1"></Slider>
                <TextBlock HorizontalAlignment="Center" Grid.Row="2" Grid.Column="2" Text="{Binding Gamma}"></TextBlock>
                
                <UniformGrid Grid.Row="3" Columns="1" Grid.ColumnSpan="99" >
                    <Button Command="{Binding ApplyImageParamsCommand}" Width="50" Height="50" HorizontalAlignment="Right" Margin="5,0,5,0"> 
                        <Path Fill="{StaticResource ButtonForegroundBrush}" Data="{StaticResource CheckedSVG}" Stretch="Uniform" Margin="5">
                        </Path>
                    </Button>
                </UniformGrid>
            </Grid>

            
        </Expander>
        
    </Grid>
</UserControl>
