<Application x:Class="AstrophotographyBuddy.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:AstrophotographyBuddy.ViewModel"
             xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
             xmlns:util ="clr-namespace:AstrophotographyBuddy.Utility"
              xmlns:datavis="clr-namespace:System.Windows.Controls.DataVisualization;assembly=System.Windows.Controls.DataVisualization.Toolkit"
             xmlns:chartingToolkit=	"clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"   
             xmlns:Primitives="clr-namespace:System.Windows.Controls.DataVisualization.Charting.Primitives;assembly=System.Windows.Controls.DataVisualization.Toolkit"            
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/AstrophotographyBuddy;component/Resources/SVGDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <vm:ApplicationVM x:Key="AppVM" />
            <BooleanToVisibilityConverter x:Key="VisibilityConverter"/>
            <util:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <util:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
            <util:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <util:DatabindingDebugConverter x:Key="DebugConverter" />

            <SolidColorBrush x:Key="PrimaryBrush" Color="{Binding Source={StaticResource AppVM}, Path=OptionsVM.PrimaryColor}"/>
            <SolidColorBrush x:Key="SecondaryBrush" Color="{Binding Source={StaticResource AppVM}, Path=OptionsVM.SecondaryColor}"/>
            <SolidColorBrush x:Key="BorderBrush" Color="{Binding Source={StaticResource AppVM}, Path=OptionsVM.BorderColor}"/>
            <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{Binding Source={StaticResource AppVM}, Path=OptionsVM.ButtonBackgroundColor}"/>
            <SolidColorBrush x:Key="ButtonBackgroundSelectedBrush" Color="{Binding Source={StaticResource AppVM}, Path=OptionsVM.ButtonBackgroundSelectedColor}"/>
            <SolidColorBrush x:Key="BackgroundBrush" Color="{Binding Source={StaticResource AppVM}, Path=OptionsVM.BackgroundColor}"/>



            <!-- Standard Styles -->
            <!--<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="MinHeight" Value="30" />
            <Setter Property="Foreground" Value="{Binding Source={x:Static util:Settings.PrimaryColor}}" />
            <Setter Property="Background" Value="{Binding Source={x:Static util:Settings.BackgroundColor}}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Height" Value="Auto" />
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="MinHeight" Value="30" />
            <Setter Property="Foreground" Value="{Binding Source={x:Static util:Settings.PrimaryColor}}" />
            <Setter Property="Background" Value="{Binding Source={x:Static util:Settings.BackgroundColor}}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Height" Value="Auto" />
        </Style>

        <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource {x:Type GroupBox}}">
            <Setter Property="Background" Value="{Binding Source={x:Static util:Settings.PrimaryColor}}" />
            <Setter Property="BorderBrush" Value="{Binding Source={x:Static util:Settings.BorderColor}}"/>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>

                                <ColumnDefinition Width="*"/>

                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="6" />
                                <RowDefinition Height="40" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="6" />
                            </Grid.RowDefinitions>

                            <Border Background="{Binding Source={x:Static util:Settings.BackgroundColor}}" BorderBrush="{Binding Source={x:Static util:Settings.BorderColor}}" BorderThickness="0,2,0,2"  CornerRadius="0" Grid.Row="0" Grid.RowSpan="4"  />
                            <ContentPresenter  Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      Grid.Row="1"  
                                      HorizontalAlignment="Left" VerticalAlignment="Top"
                                      RenderTransformOrigin="0.5,0.5">

                            </ContentPresenter>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="{Binding Source={x:Static util:Settings.BackgroundColor}}" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="BorderBrush" Value="{Binding Source={x:Static util:Settings.BorderColor}}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"  >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>                    
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{Binding Source={x:Static util:Settings.SecondaryColor}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>-->

            <!-- Custom Styles -->

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
            </Style>

            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
            </Style>

            <Style TargetType="{x:Type DataGrid}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
            </Style>

            <Style TargetType="{x:Type ListView}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
            </Style>



            <Style TargetType="GroupBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupBox}">
                            <Grid SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="6"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="6"/>
                                </Grid.RowDefinitions>
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3"/>
                                <Border BorderBrush="{StaticResource BackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3">
                                    <Border.OpacityMask>
                                        <MultiBinding ConverterParameter="7" UpdateSourceTrigger="Default">
                                            <MultiBinding.Converter>
                                                <BorderGapMaskConverter/>
                                            </MultiBinding.Converter>
                                            <Binding ElementName="Header" Path="ActualWidth"/>
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                        </MultiBinding>
                                    </Border.OpacityMask>
                                    <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                                        <Border BorderBrush="{StaticResource BackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                                    </Border>
                                </Border>
                                <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ContentPresenter Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="SnapsToDevicePixels" Value="True" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="4" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}">
                                <Border CornerRadius="4" Background="{TemplateBinding Background}">
                                    <Grid>
                                        <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource ButtonBackgroundSelectedBrush}" />
                                    <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundSelectedBrush}" />
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
                                    <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type RepeatButton}">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="SnapsToDevicePixels" Value="True" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border" CornerRadius="4" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}">
                                <Border CornerRadius="4" Background="{TemplateBinding Background}">
                                    <Grid>
                                        <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background"  Value="{StaticResource ButtonBackgroundSelectedBrush}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource ButtonBackgroundSelectedBrush}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderBrush}"/>
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                    <Setter Property="Background" Value="{StaticResource ButtonBackgroundSelectedBrush}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderBrush}"/>
                                </Trigger>
                                <!-- <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundBrush}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderBrush}"/>
                                <Setter Property="TextElement.Foreground" TargetName="MyContentPresenter" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ToggleButton}" x:Key="TB" >
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="SnapsToDevicePixels" Value="True" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}" >
                            <Border x:Name="border" CornerRadius="4" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}">
                                <Border CornerRadius="4" Background="{TemplateBinding Background}">
                                    <Grid>
                                        <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background"  Value="{StaticResource ButtonBackgroundSelectedBrush}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource ButtonBackgroundSelectedBrush}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderBrush}"/>
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                    <Setter Property="Background" Value="{StaticResource ButtonBackgroundSelectedBrush}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderBrush}"/>
                                </Trigger>
                                <!-- <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundBrush}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderBrush}"/>
                                <Setter Property="TextElement.Foreground" TargetName="MyContentPresenter" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TextBlockWithMouseOver" TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
                        <Setter Property="Background" Value="{StaticResource SecondaryBrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}, Path=IsMouseOver}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
                        <Setter Property="Background" Value="{StaticResource SecondaryBrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- Chart Styles -->
            <Style x:Key="ChartStyle" TargetType="{x:Type chartingToolkit:Chart}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type chartingToolkit:Chart}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0.5" Background="{TemplateBinding Background}" Padding="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <datavis:Title Content="{TemplateBinding Title}">
                                        <datavis:Title.Style>
                                            <Style TargetType="{x:Type datavis:Title}">
                                                <Setter Property="FontSize" Value="12"/>
                                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                                <Setter Property="Margin" Value="0"/>
                                                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
                                                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                                            </Style>
                                        </datavis:Title.Style>
                                    </datavis:Title>
                                    <Grid Margin="0,15" Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Primitives:EdgePanel x:Name="ChartArea" Style="{TemplateBinding ChartAreaStyle}">
                                            <Grid Panel.ZIndex="-1">
                                                <Grid.Style>
                                                    <Style TargetType="{x:Type Grid}">
                                                        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                                                    </Style>
                                                </Grid.Style>
                                            </Grid>
                                            <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" Panel.ZIndex="10"/>
                                        </Primitives:EdgePanel>
                                    </Grid>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="LegendStyle" Value="{StaticResource ChartLegendStyle}"></Setter>

            </Style>

            <Style x:Key="LineSeriesStyle" TargetType="{x:Type chartingToolkit:LineSeries}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type chartingToolkit:LineSeries}" >
                            <Canvas x:Name="PlotArea" >
                                <Polyline Points="{TemplateBinding Points}">
                                    <Polyline.Style>
                                        <Style TargetType="{x:Type Polyline}">
                                            <Setter Property="Stroke" Value="{StaticResource SecondaryBrush}" />
                                            <Setter Property="StrokeThickness" Value="2"/>
                                            <Setter Property="StrokeMiterLimit" Value="1"/>
                                        </Style>
                                    </Polyline.Style>
                                </Polyline>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="DataPointStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type chartingToolkit:LineDataPoint}">
                            <Setter Property="Background" Value="Yellow"></Setter>
                            <Setter Property="Width" Value="5"></Setter>
                            <Setter Property="Height" Value="5"></Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type chartingToolkit:LineDataPoint}">
                                        <Ellipse>
                                            <Ellipse.Style>
                                                <Style TargetType="{x:Type Ellipse}">
                                                    <Setter Property="Fill" Value="{StaticResource PrimaryBrush}"></Setter>
                                                    <Setter Property="Stroke" Value="{StaticResource PrimaryBrush}"></Setter>
                                                    <Setter Property="Height" Value="5"></Setter>
                                                    <Setter Property="Width" Value="5"></Setter>
                                                </Style>
                                            </Ellipse.Style>
                                        </Ellipse>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="ChartLegendStyle" TargetType="{x:Type datavis:Legend}">
                <Setter Property="Margin" Value="15,0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
